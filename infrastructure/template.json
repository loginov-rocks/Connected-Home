{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Outputs": {
    "ApiBaseUrl": {
      "Value": {
        "Fn::GetAtt": [
          "ApiGateway",
          "ApiEndpoint"
        ]
      }
    },
    "ClientId": {
      "Value": {
        "Ref": "Thing"
      }
    },
    "PublishTopicName": {
      "Value": {
        "Fn::Sub": "${AWS::StackName}-${TopicName}"
      }
    },
    "SubscribeTopicFilter": {
      "Value": {
        "Fn::Sub": "${AWS::StackName}-${TopicName}"
      }
    }
  },
  "Parameters": {
    "CertificateId": {
      "Description": "Certificate ID",
      "Type": "String"
    },
    "ThingName": {
      "Default": "thing",
      "Description": "Thing Name",
      "Type": "String"
    },
    "TimestreamTableMagneticStoreRetentionPeriod": {
      "Default": 7,
      "Description": "Timestream Table Magnetic Store Retention Period (in days)",
      "Type": "Number"
    },
    "TimestreamTableMemoryStoreRetentionPeriod": {
      "Default": 24,
      "Description": "Timestream Table Memory Store Retention Period (in hours)",
      "Type": "Number"
    },
    "TopicName": {
      "Default": "topic",
      "Description": "Topic Name",
      "Type": "String"
    },
    "TopicRuleErrorsLogGroupRetention": {
      "AllowedValues": [
        1,
        3,
        5,
        7,
        14,
        30,
        60,
        90,
        120,
        150,
        180,
        365,
        400,
        545,
        731,
        1096,
        1827,
        2192,
        2557,
        2922,
        3288,
        3653
      ],
      "Default": 7,
      "Description": "Topic Rule Errors Log Group Retention (in days)",
      "Type": "Number"
    }
  },
  "Resources": {
    "ApiGateway": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-api-gw"
        },
        "ProtocolType": "HTTP"
      }
    },
    "GetIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGateway"
        },
        "IntegrationMethod": "POST",
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Sub": [
            "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetFunctionArn}/invocations",
            {
              "GetFunctionArn": {
                "Fn::GetAtt": [
                  "GetFunction",
                  "Arn"
                ]
              }
            }
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "GetRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGateway"
        },
        "RouteKey": "GET /",
        "Target": {
          "Fn::Sub": "integrations/${GetIntegration}"
        }
      }
    },
    "Stage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "ApiGateway"
        },
        "AutoDeploy": true,
        "StageName": "$default"
      }
    },
    "GetFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "logs:CreateLogGroup",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FunctionName}:*",
                      {
                        "FunctionName": {
                          "Fn::Sub": "${AWS::StackName}-get-function"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "PolicyName": "AWSLambdaBasicExecutionRole"
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "timestream:DescribeEndpoints",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "timestream:Select",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "TimestreamTable",
                      "Arn"
                    ]
                  }
                }
              ]
            },
            "PolicyName": "CustomPolicy"
          }
        ],
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}-get-function-role"
        }
      }
    },
    "TopicRuleRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "iot.amazonaws.com"
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "TopicRuleErrorsLogGroup",
                      "Arn"
                    ]
                  }
                },
                {
                  "Action": "timestream:DescribeEndpoints",
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": "timestream:WriteRecords",
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::GetAtt": [
                      "TimestreamTable",
                      "Arn"
                    ]
                  }
                }
              ]
            },
            "PolicyName": "CustomPolicy"
          }
        ],
        "RoleName": {
          "Fn::Sub": "${AWS::StackName}-topic-rule-role"
        }
      }
    },
    "Policy": {
      "Type": "AWS::IoT::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "iot:Connect",
              "Resource": {
                "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:client/${Thing}"
              }
            },
            {
              "Effect": "Allow",
              "Action": "iot:Subscribe",
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/${TopicName}",
                  {
                    "TopicName": {
                      "Fn::Sub": "${AWS::StackName}-${TopicName}"
                    }
                  }
                ]
              }
            },
            {
              "Effect": "Allow",
              "Action": "iot:Publish",
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/${TopicName}",
                  {
                    "TopicName": {
                      "Fn::Sub": "${AWS::StackName}-${TopicName}"
                    }
                  }
                ]
              }
            },
            {
              "Effect": "Allow",
              "Action": "iot:Receive",
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/${TopicName}",
                  {
                    "TopicName": {
                      "Fn::Sub": "${AWS::StackName}-${TopicName}"
                    }
                  }
                ]
              }
            }
          ]
        },
        "PolicyName": {
          "Fn::Sub": "${AWS::StackName}-policy"
        }
      }
    },
    "PolicyPrincipalAttachment": {
      "Type": "AWS::IoT::PolicyPrincipalAttachment",
      "Properties": {
        "PolicyName": {
          "Ref": "Policy"
        },
        "Principal": {
          "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:cert/${CertificateId}"
        }
      }
    },
    "Thing": {
      "Type": "AWS::IoT::Thing",
      "Properties": {
        "ThingName": {
          "Fn::Sub": "${AWS::StackName}-${ThingName}"
        }
      }
    },
    "ThingPrincipalAttachment": {
      "Type": "AWS::IoT::ThingPrincipalAttachment",
      "Properties": {
        "Principal": {
          "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:cert/${CertificateId}"
        },
        "ThingName": {
          "Ref": "Thing"
        }
      }
    },
    "TopicRule": {
      "Type": "AWS::IoT::TopicRule",
      "Properties": {
        "TopicRulePayload": {
          "Actions": [
            {
              "Timestream": {
                "DatabaseName": {
                  "Ref": "TimestreamDatabase"
                },
                "Dimensions": [
                  {
                    "Name": "clientId",
                    "Value": "${clientId()}"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "TopicRuleRole",
                    "Arn"
                  ]
                },
                "TableName": {
                  "Fn::GetAtt": [
                    "TimestreamTable",
                    "Name"
                  ]
                },
                "Timestamp": {
                  "Unit": "SECONDS",
                  "Value": "${timestamp}"
                }
              }
            }
          ],
          "AwsIotSqlVersion": "2015-10-08",
          "ErrorAction": {
            "CloudwatchLogs": {
              "BatchMode": true,
              "LogGroupName": {
                "Ref": "TopicRuleErrorsLogGroup"
              },
              "RoleArn": {
                "Fn::GetAtt": [
                  "TopicRuleRole",
                  "Arn"
                ]
              }
            }
          },
          "Sql": {
            "Fn::Sub": "SELECT cast(humidity as Double) as humidity, cast(temperature as Double) as temperature FROM '${AWS::StackName}-${TopicName}'"
          }
        }
      }
    },
    "GetFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Architectures": [
          "arm64"
        ],
        "Code": {
          "ZipFile": "exports.handler = async (event) => { console.log(event); };"
        },
        "Environment": {
          "Variables": {
            "CLIENT_ID": {
              "Ref": "Thing"
            },
            "TIMESTREAM_DATABASE_NAME": {
              "Ref": "TimestreamDatabase"
            },
            "TIMESTREAM_TABLE_NAME": {
              "Fn::GetAtt": [
                "TimestreamTable",
                "Name"
              ]
            }
          }
        },
        "FunctionName": {
          "Fn::Sub": "${AWS::StackName}-get-function"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "GetFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x"
      }
    },
    "GetFunctionPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "GetFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/${Stage}/GET/"
        }
      }
    },
    "TopicRuleErrorsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": {
          "Fn::Sub": "${AWS::StackName}-topic-rule-errors"
        },
        "RetentionInDays": {
          "Ref": "TopicRuleErrorsLogGroupRetention"
        }
      }
    },
    "TimestreamDatabase": {
      "Type": "AWS::Timestream::Database",
      "Properties": {
        "DatabaseName": {
          "Fn::Sub": "${AWS::StackName}-timestream-database"
        }
      }
    },
    "TimestreamTable": {
      "Type": "AWS::Timestream::Table",
      "Properties": {
        "DatabaseName": {
          "Ref": "TimestreamDatabase"
        },
        "RetentionProperties": {
          "MagneticStoreRetentionPeriodInDays": {
            "Ref": "TimestreamTableMagneticStoreRetentionPeriod"
          },
          "MemoryStoreRetentionPeriodInHours": {
            "Ref": "TimestreamTableMemoryStoreRetentionPeriod"
          }
        },
        "TableName": {
          "Fn::Sub": "${AWS::StackName}-timestream-table"
        }
      }
    }
  }
}
